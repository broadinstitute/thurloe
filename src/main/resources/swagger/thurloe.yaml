openapi: 3.0.1
info:
  title: Thurloe
  description: All your key-value pairs are belong to us
  version: "0.2"
servers:
  - url: /
paths:
  /status:
    get:
      tags:
        - Status
      summary: Returns status code for connection to database.
      operationId: status
      responses:
        200:
          description: OK
          content: {}
        500:
          description: Internal server error
          content: {}
  /api/thurloe:
    get:
      tags:
        - Key-value pairs
      summary: Query the database using a custom subset of userId, key and value
      operationId: query
      parameters:
        - name: X-FireCloud-Id
          in: header
          description: FireCloud ID Token to be passed as a header
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: User ID of the owner of the key-value pair
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: key
          in: query
          description: Key of the key-value pair
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: value
          in: query
          description: Value of the key-value pair
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: {}
              example:
                - userId: 123
                  keyValuePair:
                    key: foo
                    value: bar
            text/plain:
              schema:
                type: array
                items:
                  type: object
                  properties: {}
        400:
          description: Bad Request (e.g. missing or invalid "X-FireCloud-Id" header)
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
        - google_oauth:
            - openid
    post:
      tags:
        - Key-value pairs
      summary: Adds or resets a list of key-value pair to the database for a given
        user ID.
      operationId: setKey
      parameters:
        - name: X-FireCloud-Id
          in: header
          description: FireCloud ID Token to be passed as a header
          required: true
          schema:
            type: string
      requestBody:
        description: The Key/Value pair to add to the system
        content:
          application/json:
            schema:
              required:
                - keyValuePairs
                - userId
              type: object
              properties:
                userId:
                  type: string
                keyValuePairs:
                  type: array
                  items:
                    required:
                      - key
                      - value
                    type: object
                    properties:
                      key:
                        type: string
                      value:
                        type: string
        required: false
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Bad request (e.g. invalid JSON input, missing or invalid "X-FireCloud-Id"
            header)
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
        - google_oauth:
            - openid
      x-codegen-request-body-name: body
  /api/thurloe/{userId}:
    get:
      tags:
        - Key-value pairs
      summary: Returns a list of all keys and values stored in Thurloe for the specified
        user ID.
      operationId: getAll
      parameters:
        - name: X-FireCloud-Id
          in: header
          description: FireCloud ID Token to be passed as a header
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: The user ID whose data is being requested
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  keyValuePairs:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
            text/plain:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  keyValuePairs:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
        400:
          description: Bad Request (e.g. missing or invalid "X-FireCloud-Id" header)
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
        - google_oauth:
            - openid
  /api/thurloe/{userId}/{key}:
    get:
      tags:
        - Key-value pairs
      summary: Returns a single key-value pair, looked up by key and userId.
      operationId: getKvp
      parameters:
        - name: X-FireCloud-Id
          in: header
          description: FireCloud ID Token to be passed as a header
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: The user ID whose data is being requested
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of the data to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  userid:
                    type: string
                  keyValuePair:
                    type: object
                    properties:
                      key:
                        type: string
                      value:
                        type: string
            text/plain:
              schema:
                type: object
                properties:
                  userid:
                    type: string
                  keyValuePair:
                    type: object
                    properties:
                      key:
                        type: string
                      value:
                        type: string
        400:
          description: Bad Request (e.g. missing or invalid "X-FireCloud-Id" header)
          content: {}
        404:
          description: Key not found
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
        - google_oauth:
            - openid
    delete:
      tags:
        - Key-value pairs
      summary: Deletes a single key-value pair, referenced by key and userId.
      operationId: deleteKvp
      parameters:
        - name: X-FireCloud-Id
          in: header
          description: FireCloud ID Token to be passed as a header
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: The user ID whose data is being deleted
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of the data to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Bad Request (e.g. missing or invalid "X-FireCloud-Id" header)
          content: {}
        404:
          description: Key not found
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
        - google_oauth:
            - openid
  /api/notification:
    post:
      tags:
        - Notifications
      summary: Sends a notification to the specified user with the templateId and
        substitutions specified
      operationId: postNotification
      parameters:
        - name: X-FireCloud-Id
          in: header
          description: FireCloud ID Token to be passed as a header
          required: true
          schema:
            type: string
      requestBody:
        description: The notification to send
        content:
          '*/*':
            schema:
              required:
                - notificationId
              type: object
              properties:
                userId:
                  type: string
                userEmail:
                  type: string
                replyTo:
                  type: string
                notificationId:
                  type: string
                substitutions:
                  type: object
                  properties:
                    key:
                      type: string
        required: false
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Bad Request (e.g. missing or invalid "X-FireCloud-Id" header)
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
        - google_oauth:
            - openid
      x-codegen-request-body-name: body
components:
  securitySchemes:
    google_oauth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
